#!/usr/bin/env python3.10

import http.server
import socketserver
import os
import cgi
import socket

class MyHandler(http.server.SimpleHTTPRequestHandler):
    def do_GET(self):
        if self.path == '/favicon.ico':
              self.send_response(204)
              self.end_headers()
              return

        if not os.path.isfile(self.path[1:]):
            self.send_response(200)
            self.send_header('Content-type', 'text/html')
            self.end_headers()
    
            file_list = [f for f in os.listdir('.' + self.path) if f not in ['.DS_Store', '.localized']]
            current_path = self.path if self.path[1:] else ''
            file_list_html = ''.join([f'<li><a href="{current_path}/{file}">{file}</a></li>' for file in file_list]) or 'empty'
    
            self.wfile.write(bytes(f"""
            <!DOCTYPE html>
            <html>
            <head>
                <meta name="viewport" content="width=device-width, initial-scale=1.0">
                <title>Simple File Server</title>
                <style>                                   
                    body {{
                        font-family: Arial, sans-serif;
                        margin: 20px;
                        font-size: 18px;
                    }}
                    header button {{
                        padding: 10px;
                        margin: 5px;
                        font-size: 18px;
                        border-radius: 25%;
                    }}
                    .current-path {{
                        font-size: 20px;
                        margin: 20px 0 20px 0;
                        font-weight: bold;
                    }}
                    .upload-section {{
                        margin-top: 20px;
                        border-top: 1px solid #ccc;
                        padding-top: 20px;
                    }}
                </style>
            </head>
            <body>
                <header>
                    <button onclick="window.location.href='/'">Home</button>
                    <button onclick="window.history.back()">Back</button>
                </header>
                <div class="current-path">Current Path: {self.path}</div>
                <h1>File Tree:</h1>
                <ul>
                    {file_list_html}
                </ul>
                <div class="upload-section">
                    <h2>Upload File:</h2>
                    <form enctype="multipart/form-data" action="{self.path}" method="post">
                        <input type="file" name="file">
                        <input type="submit" value="Upload">
                    </form>
                </div>
            </body>
            </html>
            """, 'utf-8'))
        else:
            return super().do_GET()
                       

    def do_POST(self):
        file_path = self.path[1:]
        form = cgi.FieldStorage(
            fp=self.rfile,
            headers=self.headers,
            environ={'REQUEST_METHOD': 'POST'}
        )
        fileitem = form['file']

        if fileitem.filename:
            fn = os.path.basename(fileitem.filename)
            full_path = os.path.join(file_path, fn)
            with open(full_path, 'wb') as f:
                f.write(fileitem.file.read())
            self.send_response(200)
            self.end_headers()
            self.wfile.write(bytes(f'<script>window.location.href="{self.path}";</script>', 'utf-8'))
        else:
            self.send_response(400)
            self.end_headers()
            self.wfile.write(b'No file selected for upload.')

class MyTCPServer(socketserver.TCPServer):
    def server_bind(self):
        self.socket.setsockopt(socket.SOL_SOCKET, socket.SO_REUSEADDR, 1)
        super().server_bind()

if __name__ == "__main__":
    PORT = 8000
    Handler = MyHandler

    with MyTCPServer(("", PORT), Handler) as httpd:
        print(f"Server running at http://localhost:{PORT}/")
        try:
            httpd.serve_forever()
        except KeyboardInterrupt:
            print("\nServer is shutting down...")
            httpd.shutdown()
            httpd.server_close()
            print("Server has been shut down.")
